version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: tracking_db
      POSTGRES_USER: tracking_user
      POSTGRES_PASSWORD: tracking_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tracking_user -d tracking_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    ports:
      - "8000:5000"
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://tracking_user:tracking_password@db:5432/tracking_db
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=your-secret-key-change-in-production
      - API_KEY=test-api-key
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    command: flask run --host=0.0.0.0 --port=5000

  celery:
    build: .
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://tracking_user:tracking_password@db:5432/tracking_db
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=your-secret-key-change-in-production
      - API_KEY=test-api-key
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    command: celery -A src.infrastructure.external.celery_config worker --loglevel=info --queues=celery,checkpoints,notifications

volumes:
  postgres_data:
